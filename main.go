package main

import (
	"context"
	"fmt"
	"log"
	"os"
	"os/signal"
	"sync"
	"syscall"
	"time"
)

func main() {
	ctx, cancel := context.WithCancel(context.Background())
	defer cancel()

	sigChan := make(chan os.Signal, 1)
	signal.Notify(sigChan, syscall.SIGINT, syscall.SIGTERM)

	go func() {
		<-sigChan
		cancel()
	}()

	username, kdrbm, count, err := promptUser()
	if err != nil {
		log.Fatalf("Error during user input: %v", err)
	}

	client, err := NewPLNClient(100, username)
	if err != nil {
		log.Fatalf("Failed to initialize client: %v", err)
	}
	defer client.Close()

	readings, err := client.GetReadingsByKDRBM(kdrbm)
	if err != nil {
		log.Fatalf("Failed to get readings: %v", err)
	}

	unitUP := "52260"
	var wg sync.WaitGroup
	sem := make(chan struct{}, maxConcurrentUploads)

	fmt.Printf("Processing %d readings for KDRBM %s...\n", count, kdrbm)
	startTime := time.Now()

	for i := 0; i < count && i < len(readings); i++ {
		wg.Add(1)
		go func(reading DBMeterData) {
			defer wg.Done()
			sem <- struct{}{}
			defer func() { <-sem }()

			meterData := reading.ToSubmissionData(client.timeGen, client.coordGen)
			meterData.TransaksiBy = username
			meterData.NamaFoto = fmt.Sprintf("%s_%s_%s_%s_PN01.jpg",
				meterData.BLTH,
				meterData.IDPEL,
				time.Now().Format("20060102_150405"),
				unitUP)

			photoData := PhotoData{
				IDPEL:        meterData.IDPEL,
				BLTH:         meterData.BLTH,
				UnitUP:       unitUP,
				NamaFile:     meterData.NamaFoto,
				PhotoContent: "%2F9j%2F4AAQSkZJRgABAQAAAQABAAD%2F2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB%0AAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH%2F2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEB%0AAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH%2FwAARCAKAAnoDASIA%0AAhEBAxEB%2F8QAHgABAQADAAMBAQEAAAAAAAAAAAMCBQgBBAkGBwr%2FxAA%2FEAEAAQEFBQcCBQEFCAMA%0AAAAAAQIDETFRcZGxwdHwBxQhMjNzsgVBBBJhcoGhBhMiUuEVFhdikpOi8SNCU%2F%2FEABsBAQEBAQEB%0AAQEAAAAAAAAAAAAGAgQBBQMH%2F8QAMBEBAAEBBQcEAgICAwEAAAAAAAECBFFxsfASMTIzQqHREYLB%0A8SFBA2ETkSIjgbL%2F2gAMAwEAAhEDEQA%2FAP8AaP8AUPqdjbWUxTMX3TF1%2BjSfg%2FxlnZVTNUx4zP3%2B%0A0zpl%2Frc9C1sZiPGZ%2B%2BMz%2FpsnHx%2Fmdl%2BFqtZxmNJmPDw%2FXxxv%2B0xddL%2BkI9%2Brp%2FGUV%2BNN122eDLvN%0APUTzaWzsZsou8Z2z1O37%2FwAVunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdO%0AU7JLpynZINr3mnqJ5neaeonm1V05TskunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mn%0AqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V05TskunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p%0A6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V05TskunKdkg2veaeonmd5p6iebVXTlOyS6cp%0A2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V05TskunKdkg2veaeonmd5p6iebVXT%0AlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V05TskunKdkg2veaeonmd5p%0A6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V05TskunKdkg2vea%0Aeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V05TskunK%0Adkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5neaeonm1V0%0A5TskunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3mnqJ5nea%0Aeonm1V05TskunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpynZINr3m%0AnqJ5neaeonm1V05TskunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVdOU7JLpy%0AnZINr3mnqJ5neaeonm1V05TskunKdkg2veaeonmd5p6iebVXTlOyS6cp2SDa95p6ieZ3mnqJ5tVd%0AOU7JLpynZINr3mnqJ5p1fiKL58Yxn7%2Fro1105TsljMXzffMfpfN3X6f63m6N84fMNpT%2BIoifCYw%2F%0AWctHsWP4umLSJm7Wb41z%2FT%2BrRxTN83XzlF990dfz9scfYsLKbS0iPGMowv4%2BH9cHNauCMfD31%2F5z%0AH6nf%2Fp%2B5%2FA%2FjKKpi67wnw8fHwpvj7RfOz7YNt3mnqJ5vy%2F4D8LNExjd%2Babscrv5%2FSP0jw%2B8bf%2B6n%0A9f8Apnml7TzZwpyUdk5NM3%2FmP9Q%2FnFVMVY34XKWVlFF0xhPjPj4%2BMaMV6cI0jcsUw8gAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3%0AjdG%2BcPmGVGM6cYe5%2BHmYtaZh6dGM6cYezZVflriXNauCMfDccVXtyfr%2FAKfP5pp%2B3jd%2F4Nx%2BSc4%2F%0Aryaf6RE2s0%2Fl%2FwA328f%2FAK%2Fw%2FSd3rynZ%2Fql7TzZwpyUNk5MYzlD%2BQL04RpG5BenCNI3LFMPIAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFWM6zvXQ%0AqxnWd43RvnD5hlRjOnGHs2VP564j%2Bdj1qMZ04w978LdFrEzOGHHrjc5rVwRj4bjiq9uTc%2Fg%2FqNP0%0AuaJrqiLqr5%2FNVTF8TTMff%2F1%2BmW0%2F3vsf%2FwBLP%2Fqs3MPbX%2Fav8X9BsrSfwc%2BMWd8XVzR4%2FwCGPtOF%0A109eHLv%2FABZ%2Bu%2F8AN%2F3q0xaeZM4dojyobJyY%2FuZ%2BH0CXpwjSNyC9OEaRuWCYeQAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKsZ1neuhVjOs7xujfO%0AHzDKjGdOMM%2FzTFdN03ff%2BfFhRjOnGGU%2BenTm5rVwRj4bjiq9uTmDt6qqrs7WKpmf%2Fjqi7%2BbONrkb%0A8kZz%2FTk637ePTtfbq%2BVm5LTFp5k66aVBY%2BRTrph9UF6cI0jcgvThGkblgmXkAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCrGdZ3roVYzrO8bo3zh8%0AwyoxnTjDKfPTpzY0YzpxhlPnp05ua1cEY%2BG44qvbk5e7ePTtfbq%2BVm5LdadvHp2vt1fKzclpi08y%0AddNKgsfIp10w%2BqC9OEaRuQXpwjSNywTLyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhVjOs710KsZ1neN0b5w%2BYZUYzpxhlPnp05saMZ04wynz06c%0A3NauCMfDccVXtycvdvHp2vt1fKzclutO3j07X26vlZuS0xaeZOumlQWPkU66YfVBenCNI3IL04Rp%0AG5YJl5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAQqxnWd66FWM6zvG6N84fMMqMZ04wynz06c2NGM6cYZT56dObmtXBGPhuOKr25OXu3j07X26vlZ%0AuS3Wnbx6dr7dXys3JaYtPMnXTSoLHyKddMPqgvThGkbkF6cI0jcsEy8gAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3jdG%2BcPmGVGM%0A6cYZT56dObGjGdOMMp89OnNzWrgjHw3HFV7cnL3bx6dr7dXys3JbrTt49O19ur5WbktMWnmTrppU%0AFj5FOumH1QXpwjSNyC9OEaRuWCZeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAEKsZ1neuhVjOs7xujfOHzDKjGdOMMp89OnNjRjOnGGU%2BenTm5rVw%0ARj4bjiq9uTl7t49O19ur5Wbkt1p28ena%2B3V8rNyWmLTzJ100qCx8inXTD6oL04RpG5BenCNI3LBM%0AvIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFW%0AM6zvXQqxnWd43RvnD5hlRjOnGGU%2BenTmxoxnTjDKfPTpzc1q4Ix8NxxVe3Jy928ena%2B3V8rNyW60%0A7ePTtfbq%2BVm5LTFp5k66aVBY%2BRTrph9UF6cI0jcgvThGkblgmXkAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCrGdZ3roVYzrO8bo3zh8wyoxnTjDK%0AfPTpzY0YzpxhlPnp05ua1cEY%2BG44qvbk5e7ePTtfbq%2BVm5LdadvHp2vt1fKzclpi08yddNKgsfIp%0A10w%2BqC9OEaRuQXpwjSNywTLyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAhVjOs710KsZ1neN0b5w%2BYZUYzpxhlPnp05saMZ04wynz06c3NauCMfDc%0AcVXtycvdvHp2vt1fKzclutO3j07X26vlZuS0xaeZOumlQWPkU66YfVBenCNI3IL04RpG5YJl5AAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQqxnWd6%0A6FWM6zvG6N84fMMqMZ04wynz06c2NGM6cYZT56dObmtXBGPhuOKr25OXu3j07X26vlZuS3Wnbx6d%0Ar7dXys3JaYtPMnXTSoLHyKddMPqgvThGkbkF6cI0jcsEy8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3jdG%2BcPmGVGM6cYZT56dO%0AbGjGdOMMp89OnNzWrgjHw3HFV7cnL3bx6dr7dXys3JbrTt49O19ur5WbktMWnmTrppUFj5FOumH1%0AQXpwjSNyC9OEaRuWCZeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAEKsZ1neuhVjOs7xujfOHzDKjGdOMMp89OnNjRjOnGGU%2BenTm5rVwRj4bjiq9u%0ATl7t49O19ur5Wbkt1p28ena%2B3V8rNyWmLTzJ100qCx8inXTD6oL04RpG5BenCNI3LBMvIAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFWM6zvXQqxn%0AWd43RvnD5hlRjOnGGU%2BenTmxoxnTjDKfPTpzc1q4Ix8NxxVe3Jy928ena%2B3V8rNyW607ePTtfbq%2B%0AVm5LTFp5k66aVBY%2BRTrph9UF6cI0jcgvThGkblgmXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCrGdZ3roVYzrO8bo3zh8wyoxnTjDKfPTpzY0Yz%0ApxhlPnp05ua1cEY%2BG44qvbk5e7ePTtfbq%2BVm5LdadvHp2vt1fKzclpi08yddNKgsfIp10w%2BqC9OE%0AaRuQXpwjSNywTLyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAhVjOs710KsZ1neN0b5w%2BYZUYzpxhlPnp05saMZ04wynz06c3NauCMfDccVXtycvdv%0AHp2vt1fKzclutO3j07X26vlZuS0xaeZOumlQWPkU66YfVBenCNI3IL04RpG5YJl5AAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQqxnWd66FWM6zvG6%0AN84fMMqMZ04wynz06c2NGM6cYZT56dObmtXBGPhuOKr25OXu3j07X26vlZuS3Wnbx6dr7dXys3Ja%0AYtPMnXTSoLHyKddMPqgvThGkbkF6cI0jcsEy8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3jdG%2BcPmGVGM6cYZT56dObGjGdOMMp%0A89OnNzWrgjHw3HFV7cnL3bx6dr7dXys3JbrTt49O19ur5WbktMWnmTrppUFj5FOumH1QXpwjSNyC%0A9OEaRuWCZeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAEKsZ1neuhVjOs7xujfOHzDKjGdOMMp89OnNjRjOnGGU%2BenTm5rVwRj4bjiq9uTl7t49O19%0Aur5Wbkt1p28ena%2B3V8rNyWmLTzJ100qCx8inXTD6oL04RpG5BenCNI3LBMvIAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFWM6zvXQqxnWd43RvnD5%0AhlRjOnGGU%2BenTmxoxnTjDKfPTpzc1q4Ix8NxxVe3Jy928ena%2B3V8rNyW607ePTtfbq%2BVm5LTFp5k%0A66aVBY%2BRTrph9UF6cI0jcgvThGkblgmXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAABCrGdZ3roVYzrO8bo3zh8wyoxnTjDKfPTpzY0YzpxhlPnp05%0Aua1cEY%2BG44qvbk5e7ePTtfbq%2BVm5LdadvHp2vt1fKzclpi08yddNKgsfIp10w%2BqC9OEaRuQXpwjS%0ANywTLyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAhVjOs710KsZ1neN0b5w%2BYZUYzpxhlPnp05saMZ04wynz06c3NauCMfDccVXtycvdvHp2vt1fKz%0AclutO3j07X26vlZuS0xaeZOumlQWPkU66YfVBenCNI3IL04RpG5YJl5AAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQqxnWd66FWM6zvG6N84fMMqMZ%0A04wynz06c2NGM6cYZT56dObmtXBGPhuOKr25OXu3j07X26vlZuS3Wnbx6dr7dXys3JaYtPMnXTSo%0ALHyKddMPqgvThGkbkF6cI0jcsEy8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3jdG%2BcPmGVGM6cYZT56dObGjGdOMMp89OnNzWrg%0AjHw3HFV7cnL3bx6dr7dXys3JbrTt49O19ur5WbktMWnmTrppUFj5FOumH1QXpwjSNyC9OEaRuWCZ%0AeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKs%0AZ1neuhVjOs7xujfOHzDKjGdOMMp89OnNjRjOnGGU%2BenTm5rVwRj4bjiq9uTl7t49O19ur5Wbkt1p%0A28ena%2B3V8rNyWmLTzJ100qCx8inXTD6oL04RpG5BenCNI3LBMvIAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFWM6zvXQqxnWd43RvnD5hlRjOnGGU%0A%2BenTmxoxnTjDKfPTpzc1q4Ix8NxxVe3Jy928ena%2B3V8rNyW607ePTtfbq%2BVm5LTFp5k66aVBY%2BRT%0Arph9UF6cI0jcgvThGkblgmXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAABCrGdZ3roVYzrO8bo3zh8wyoxnTjDKfPTpzY0YzpxhWKfzVx4%2BOEf14f%2B%0A3NauCMfDccVXtyct9vHp2vt1fKzcluxe3H8BVbWdpdff%2FdVfp430Y%2Fp4fbLHGJ5U%2FwBkWuX9Uxae%0AZMYd4jwobJHp%2FBTrdER8PpsvThGkbkF6cI0jcsEw8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3jdG%2BcPmGVGM6cYexZ%2BenV69GM%0A6cYexZ%2Bem7G9zWn8URjPffm1%2B6saM4aP6%2F8A2S%2FDf2iiabb8v%2BKJpmKopm%2B%2BI8PGJy8d78l%2Fwe%2Bn%0Af5bH%2Ft2fJ%2FYvwtlXXMTF3m8Pvf4Rfhhl97vu2X9xa%2F5UvaOZO%2F8AW%2FdujWHoorJPr%2FDTu3%2FrCJ%2F9%0A8PxK9OEaRuQXpwjSNyxTDyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAhVjOs710KsZ1neN0b5w%2BYZUYzpxh7dh6tPWT1KMZ04w9uw9WnrJzWrgjHw%0A3HFV7cn6v6bEX0%2BEeaPtH%2BRvroyjZDRfTcaf3R8G%2BS9p5s4U5KGycmMZyh%2FJ16cI0jcgvThGkbli%0AmHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABC%0ArGdZ3roVYzrO8bo3zh8wyoxnTjD27D1aesnqUYzpxh7dh6tPWTmtXBGPhuOKr25P1n03Gn90fBvm%0Ah%2Bm40%2Fuj4N8l7TzZwpyUNk5MYzlD%2BTr04RpG5BenCNI3LFMPIAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFWM6zvXQqxnWd43RvnD5hlRjOnGHt2H%0Aq09ZPUoxnTjD27D1aesnNauCMfDccVXtyfrPpuNP7o%2BDfND9Nxp%2FdHwb5L2nmzhTkobJyYxnKH8n%0AXpwjSNyC9OEaRuWKYeQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAEKsZ1neuhVjOs7xujfOHzDKjGdOMPbsPVp6yepRjOnGHt2Hq09ZOa1cEY%2BG44q%0Avbk%2FWfTcaf3R8G%2BaH6bjT%2B6Pg3yXtPNnCnJQ2TkxjOUP5OvThGkbkF6cI0jcsUw8gAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIVYzrO9dCrGdZ3jd%0AG%2BcPmGVGM6cYe3YerT1k9SjGdOMPbsPVp6yc1q4Ix8NxxVe3J%2Bs%2Bm40%2Fuj4N80P03Gn90fBvkvae%0AbOFOShsnJjGcofydenCNI3IL04RpG5Yph5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQqxnWd66FWM6zvG6N84fMMqMZ04w9uw9WnrJ6lGM6cYe3Y%0AerT1k5rVwRj4bjiq9uT9Z9Nxp%2FdHwb5ofpuNP7o%2BDfJe082cKclDZOTGM5Q%2Fk69OEaRuQXpwjSNy%0AxTDyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AhVjOs710KsZ1neN0b5w%2BYZUYzpxh7dh6tPWT1KMZ04w9uw9WnrJzWrgjHw3HFV7cn6z6bjT%2B6Pg3%0AzQ%2FTcaf3R8G%2BS9p5s4U5KGycmMZyh%2FJ16cI0jcgvThGkblimHkAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCrGdZ3ro3TVVOs3z%2FJEev4hujfOHzD%0AzRjOnGHt2Hq09ZPXpp%2FLN99%2FhMYf6vYsPUiftHXBz2qmYoj1j9%2BPLUT%2FAM6ov9PT%2FwAh%2Bs%2Bm40%2Fu%0Aj4N80H0yf8WkxOfhddOH6fbPwzb6%2BP12TySdp%2Fkp%2FwAs%2FmN0R%2Bv1EXz%2B96isv4%2FhjHOIl%2FKF6cI0%0AjcnFFUzl%2FWf6K3TTdE%2FaIWiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%0AAAAAAAAAAAAAAAAAAAAAGFMx%2BaqPvM%2BH8Xs0KsZ1ne9ifSYm5ujfOHzC61h41XabperRE45x4c%2Bs%0AXt%2Fh%2FPGscX4WmuK%2F45j8X%2FifXdMTEdo%2F164ex%2Ba5n9Rv%2FwBej9V9Li6rZ%2FXxlv2h%2Bnf4Zvzui79Y%0A4da7n885R%2FXmjbV%2FH%2F2z6x67t2EfmfS9R2WYn%2BGmY%2Fr%2FAOaX88uiMIiE7T7fzwUTtPt%2FPBa7cXT2%0A8pqKJ9PXtP41%2B96d0zhF7zdOU7JZUYzpxhU24unt5Nmq7JC6cp2SXTlOyVw24unt5ebNV06%2B87pQ%0AunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eT%0AZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKd%0AkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQ%0AunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eT%0AZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKd%0AkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQ%0AunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eT%0AZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKd%0AkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQ%0AunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eT%0AZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKd%0AkrhtxdPbybNV06%2B87pQunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQ%0AunKdkl05TslcNuLp7eTZqunX3ndKF05TskunKdkrhtxdPbybNV06%2B87pQunKdkvH5P8Al%2F8AH%2FR7%0AAzX%2FACU%2Bk7%2FzhH7xappq2o%2FGvWJ1F%2FpdMIzRMfrov%2BHpn%2B8i%2BLrr8fD7cJux8MXhlTVNM3w5a5mr%0A1%2Fe%2F0idan9%2FtvZ9aomJ%2Fr0%2FV34u%2Fv4fqPwcxfT4%2FeP6R47G1vjONsPw9X460srpi%2FG6PH%2Bf1%2B7x%2F%0Ata2zq2xyfG%2Fnon%2FJPp%2BY9I%2Ffn0ffs1Wz%2FFEen7n%2Brv6f%2F9k%3D%0A", // Add photo content here
				TransaksiBy:  username,
			}

			result := client.SubmitReading(ctx, *meterData, photoData)

			if result.MeterDataError != nil {
				log.Printf("Meter data submission failed for IDPEL %s: %v", meterData.IDPEL, result.MeterDataError)
			} else {
				log.Printf("Meter data submission successful for IDPEL %s", meterData.IDPEL)
			}

			for _, photoResult := range result.PhotoResults {
				if photoResult.Error != nil {
					log.Printf("Photo upload failed for IDPEL %s to %s: %v",
						meterData.IDPEL, photoResult.Endpoint, photoResult.Error)
				} else {
					log.Printf("Photo upload successful for IDPEL %s to %s",
						meterData.IDPEL, photoResult.Endpoint)
				}
			}
		}(readings[i])
	}

	wg.Wait()
	duration := time.Since(startTime)
	fmt.Printf("\nAll submissions completed in %v\n", duration)
}
